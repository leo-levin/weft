// Dual-Storage Image Test
// Demonstrates image accessible from both GPU (visual) and CPU (audio)

// Load an image - uncomment and replace with actual path
// img = load("texture.jpg")

// Sample image color channels
// The img@r, img@g, img@b accesses work in BOTH contexts:
// - Visual context: GPU texture sampling (GLSL)
// - Audio context: CPU pixel sampling (JavaScript via Sampler)

// Compute weighted brightness using standard luminance formula
// This computation happens in BOTH visual (GPU) and audio (CPU) contexts
// brightness<val> = img@r * 0.2126 + img@g * 0.7152 + img@b * 0.0722

// Alternative: use pixel position for brightness
pos_brightness<val> = (me@x + me@y) / 2

// Map brightness to audio frequency (220-880 Hz, one octave)
freq<hz> = pos_brightness@val * 660 + 220

// Audio: Sine wave modulated by image brightness
// The freq@hz value is computed on CPU using CPUEvaluator
// which samples the image using Sampler.sample()
play(sin(me@time * freq@hz * 6.283185) * 0.2)

// Visual: Display the brightness as grayscale
// Uses GPU texture sampling for fast rendering
display(pos_brightness@val, pos_brightness@val, pos_brightness@val)

// To test with actual image:
// 1. Uncomment the img = load() line
// 2. Replace pos_brightness with brightness
// 3. Provide path to an image file
// 4. Both visual and audio will use the same image data!
