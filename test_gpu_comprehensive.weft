// Comprehensive test for GPU renderer improvements
// Tests: let bindings, assignments, functions, conditionals, render statements

// Basic let bindings
let px = me.x;
let py = me.y;
let time = me.t;

// Mathematical expressions
let radius = distance(px, py, 0.5, 0.5);
let angle = atan2(py - 0.5, px - 0.5);

// Function calls and operations
let wave1 = sin(angle * 3.0 + time);
let wave2 = cos(radius * 10.0 - time * 2.0);
let noise_val = noise(px * 4.0, py * 4.0, time * 0.1);

// Assignments with operators
let combined = 0.0;
combined += wave1 * 0.3;
combined += wave2 * 0.3;
combined += noise_val * 0.4;

// Conditional expressions
let red_channel = if radius < 0.3 then smoothstep(0.2, 0.3, radius) else fract(combined);
let green_channel = if wave1 > 0.0 then saturate(wave1) else mix(wave2, noise_val, 0.5);
let blue_channel = clamp(combined * 2.0 - 1.0, 0.0, 1.0);

// Test render statement with named parameters
render(r: red_channel, g: green_channel, b: blue_channel);